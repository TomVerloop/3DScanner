	.cpu cortex-m0
	.fpu softvfp
	.eabi_attribute 20, 1
	.eabi_attribute 21, 1
	.eabi_attribute 23, 3
	.eabi_attribute 24, 1
	.eabi_attribute 25, 1
	.eabi_attribute 26, 1
	.eabi_attribute 30, 4
	.eabi_attribute 34, 0
	.eabi_attribute 18, 4
	.code	16
	.file	"pins.c"
	.section	.text.pin_configure_as_input,"ax",%progbits
	.align	1
	.global	pin_configure_as_input
	.code	16
	.thumb_func
	.type	pin_configure_as_input, %function
pin_configure_as_input:
	push	{r4, lr}
	cmp	r0, #0
	bne	.L2
	mov	r2, #160
	mov	r3, #128
	lsl	r2, r2, #23
	lsl	r3, r3, #8
	ldr	r4, [r2, r3]
	mov	r0, #1
	lsl	r0, r0, r1
	bic	r4, r0
	mov	r1, r4
	b	.L4
.L2:
	cmp	r0, #1
	bne	.L1
	ldr	r2, .L6
	mov	r3, #128
	lsl	r3, r3, #8
	ldr	r4, [r2, r3]
	lsl	r0, r0, r1
	mov	r1, r4
	bic	r1, r0
.L4:
	str	r1, [r2, r3]
.L1:
	@ sp needed
	pop	{r4, pc}
.L7:
	.align	2
.L6:
	.word	1342242816
	.size	pin_configure_as_input, .-pin_configure_as_input
	.section	.text.pin_configure_as_output,"ax",%progbits
	.align	1
	.global	pin_configure_as_output
	.code	16
	.thumb_func
	.type	pin_configure_as_output, %function
pin_configure_as_output:
	push	{r4, lr}
	cmp	r0, #0
	bne	.L9
	mov	r2, #160
	mov	r3, #128
	lsl	r2, r2, #23
	lsl	r3, r3, #8
	mov	r0, #1
	ldr	r4, [r2, r3]
	lsl	r0, r0, r1
	mov	r1, r0
	orr	r1, r4
	str	r1, [r2, r3]
	b	.L8
.L9:
	cmp	r0, #1
	bne	.L8
	ldr	r2, .L11
	mov	r3, #128
	lsl	r3, r3, #8
	ldr	r4, [r2, r3]
	lsl	r0, r0, r1
	orr	r0, r4
	str	r0, [r2, r3]
.L8:
	@ sp needed
	pop	{r4, pc}
.L12:
	.align	2
.L11:
	.word	1342242816
	.size	pin_configure_as_output, .-pin_configure_as_output
	.section	.text.pin_set,"ax",%progbits
	.align	1
	.global	pin_set
	.code	16
	.thumb_func
	.type	pin_set, %function
pin_set:
	push	{r4, r5, lr}
	cmp	r0, #0
	bne	.L14
	mov	r4, #160
	lsl	r4, r4, #23
	ldr	r3, .L19
	mov	r5, #1
	cmp	r2, #0
	beq	.L15
	ldr	r2, [r4, r3]
	lsl	r5, r5, r1
	mov	r1, r5
	orr	r1, r2
	str	r1, [r4, r3]
	b	.L13
.L15:
	ldr	r2, [r4, r3]
	lsl	r5, r5, r1
	bic	r2, r5
	b	.L18
.L14:
	cmp	r0, #1
	bne	.L13
	ldr	r3, .L19
	ldr	r4, .L19+4
	lsl	r0, r0, r1
	cmp	r2, #0
	beq	.L17
	ldr	r1, [r4, r3]
	orr	r0, r1
	str	r0, [r4, r3]
	b	.L13
.L17:
	ldr	r2, [r4, r3]
	bic	r2, r0
.L18:
	str	r2, [r4, r3]
.L13:
	@ sp needed
	pop	{r4, r5, pc}
.L20:
	.align	2
.L19:
	.word	16380
	.word	1342242816
	.size	pin_set, .-pin_set
	.section	.text.pin_get,"ax",%progbits
	.align	1
	.global	pin_get
	.code	16
	.thumb_func
	.type	pin_get, %function
pin_get:
	sub	r3, r0, #0
	bne	.L22
	ldr	r3, .L26
	mov	r2, #160
	lsl	r2, r2, #23
	ldr	r0, [r2, r3]
	mov	r3, #1
	lsl	r3, r3, r1
	and	r0, r3
	neg	r1, r0
	adc	r0, r0, r1
	b	.L25
.L22:
	mov	r0, #0
	cmp	r3, #1
	bne	.L23
	ldr	r2, .L26
	ldr	r0, .L26+4
	lsl	r3, r3, r1
	ldr	r0, [r0, r2]
	and	r0, r3
	neg	r3, r0
	adc	r0, r0, r3
.L25:
	uxtb	r0, r0
.L23:
	@ sp needed
	bx	lr
.L27:
	.align	2
.L26:
	.word	16380
	.word	1342242816
	.size	pin_get, .-pin_get
	.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.3 20140228 (release) [ARM/embedded-4_8-branch revision 208322]"
