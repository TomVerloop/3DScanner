
src/main.elf:     file format elf32-littlearm
src/main.elf
architecture: arm, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x0000058d

Program Header:
    LOAD off    0x00008000 vaddr 0x00000000 paddr 0x00000000 align 2**15
         filesz 0x00000694 memsz 0x00000694 flags r-x
    LOAD off    0x00010000 vaddr 0x10000000 paddr 0x10000000 align 2**15
         filesz 0x00000000 memsz 0x00000460 flags rw-
private flags = 5000002: [Version5 EABI] [has entry point]

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000694  00000000  00000000  00008000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .bss          0000005c  10000000  10000000  00010000  2**2
                  ALLOC
  2 .stack        00000404  1000005c  1000005c  00010000  2**0
                  ALLOC
  3 .debug_frame  00000020  00000000  00000000  00008694  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .comment      00000070  00000000  00000000  000086b4  2**0
                  CONTENTS, READONLY
  5 .ARM.attributes 00000031  00000000  00000000  00008724  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00000000 l    d  .text	00000000 .text
10000000 l    d  .bss	00000000 .bss
1000005c l    d  .stack	00000000 .stack
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    df *ABS*	00000000 cortex_startup.c
00000000 l    df *ABS*	00000000 timer.c
00000000 l    df *ABS*	00000000 adconv.c
00000000 l    df *ABS*	00000000 sw_uart.c
00000000 l    df *ABS*	00000000 MCP23017.c
00000000 l    df *ABS*	00000000 i2c.c
00000254 l     F .text	00000014 i2c_scl_set.part.0
00000000 l    df *ABS*	00000000 i2c_Stepper_Driver.c
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 _thumb1_case_uqi.o
00000000 l    df *ABS*	00000000 _udivsi3.o
000005f8 l       .text	00000000 .udivsi3_skip_div0_test
00000000 l    df *ABS*	00000000 _dvmd_tls.o
00000000 l    df *ABS*	00000000 
10000000 l       .text	00000000 __ram_start
10001000 l       *ABS*	00000000 __ram_end
00000694 l       .bss	00000000 __exidx_end
00000694 l       .bss	00000000 __exidx_start
00008000 l       *ABS*	00000000 __rom_end
00000000 l       *ABS*	00000000 __process_stack_size
00008000 l       *ABS*	00000000 __rom_size
10001000 l       *ABS*	00000000 __heap_end
00001000 l       *ABS*	00000000 __ram_size
10000460 l       .stack	00000000 __heap_start
00000000 l       .text	00000000 __rom_start
00000400 l       *ABS*	00000000 __main_stack_size
00000328 g     F .text	0000001e i2c_put_bit
10000054 g     O .bss	00000004 verticalStepper
10000000 g     O .bss	00000004 x
00000048 g     F .text	0000000c now
00000208 g     F .text	0000000c uart_send
00000000 g       .text	00000000 __text_start
10000004 g     O .bss	00000018 step3
10000460 g       .stack	00000000 __process_stack_end
000005f4 g     F .text	00000088 .hidden __udivsi3
10000460 g       .stack	00000000 __process_stack_start
00000214 g     F .text	00000040 MCP23017_writereg
00000694 g       *ABS*	00000000 __data_init_start
000005e0 g     F .text	00000012 .hidden __gnu_thumb1_case_uqi
10000460 g       .stack	00000000 __main_stack_end
1000005c g       .bss	00000000 __bss_end
00000408 g     F .text	00000064 stepperStep
000002dc g     F .text	00000018 i2c_start
10000060 g       .stack	00000000 __stack_start
00000020 g     F .text	00000028 timer_init
00000164 g     F .text	0000007c uart_init
000001f0 g     F .text	00000018 uart_receive_non_blocking
00000000 g     O .text	00000020 __vectors
00000278 g     F .text	0000002c i2c_scl_set
10000000 g       .text	00000000 __data_end
0000058c g     F .text	00000054 __startup
1000001c g     O .bss	00000018 step1
00000690  w    F .text	00000002 .hidden __aeabi_ldiv0
10000460 g       .stack	00000000 __stack_end
00000694 g       .text	00000000 __text_end
000002f4 g     F .text	00000034 i2c_stop
000003a0 g     F .text	00000068 stepMotor
10000034 g     O .bss	00000001 RegA
10000000 g       .bss	00000000 __bss_start
000004d8 g     F .text	000000b4 main
00000054 g     F .text	00000010 await
000005f4 g     F .text	00000000 .hidden __aeabi_uidiv
10000060 g       .stack	00000000 __main_stack_start
00000378 g     F .text	0000000e i2c_ack_get
00000064 g     F .text	00000018 delay
10000038 g     O .bss	00000018 step2
0000007c g     F .text	00000080 adc_init
10000058 g     O .bss	00000004 horizontalStepper
00000134 g     F .text	00000030 baudrate_set
00000386 g     F .text	00000018 i2c_put_byte
0000067c g     F .text	00000012 .hidden __aeabi_uidivmod
000002a4 g     F .text	00000024 i2c_sda_set
00000346 g     F .text	00000032 i2c_get_bit
000000fc g     F .text	00000010 adc_getVal
0000046c g     F .text	0000006c stepperInit
0000010c g     F .text	00000028 adc_ready
000001e0 g     F .text	00000010 uart_receive_blocking
000002c8 g     F .text	00000014 i2c_sda_get
00000690  w    F .text	00000002 .hidden __aeabi_idiv0
00000268 g     F .text	0000000e i2c_pause
10000000 g       .text	00000000 __data_start
10000050 g     O .bss	00000001 RegB


