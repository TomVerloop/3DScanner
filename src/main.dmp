
src/main.elf:     file format elf32-littlearm
src/main.elf
architecture: arm, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x000001f9

Program Header:
    LOAD off    0x00008000 vaddr 0x00000000 paddr 0x00000000 align 2**15
         filesz 0x000002ec memsz 0x000002ec flags r-x
    LOAD off    0x00010000 vaddr 0x10000000 paddr 0x000002ec align 2**15
         filesz 0x0000000c memsz 0x0000000c flags rw-
    LOAD off    0x0001000c vaddr 0x1000000c paddr 0x1000000c align 2**15
         filesz 0x00000000 memsz 0x00000404 flags rw-
private flags = 5000002: [Version5 EABI] [has entry point]

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000002ec  00000000  00000000  00008000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000000c  10000000  000002ec  00010000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stack        00000404  1000000c  1000000c  0001000c  2**0
                  ALLOC
  3 .debug_frame  00000020  00000000  00000000  0001000c  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .comment      00000070  00000000  00000000  0001002c  2**0
                  CONTENTS, READONLY
  5 .ARM.attributes 00000031  00000000  00000000  0001009c  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00000000 l    d  .text	00000000 .text
10000000 l    d  .data	00000000 .data
1000000c l    d  .stack	00000000 .stack
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    df *ABS*	00000000 cortex_startup.c
00000000 l    df *ABS*	00000000 timer.c
00000000 l    df *ABS*	00000000 sw_uart.c
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 _udivsi3.o
00000250 l       .text	00000000 .udivsi3_skip_div0_test
00000000 l    df *ABS*	00000000 _dvmd_tls.o
00000000 l    df *ABS*	00000000 
10000000 l       .text	00000000 __ram_start
10001000 l       *ABS*	00000000 __ram_end
000002ec l       .data	00000000 __exidx_end
000002ec l       .data	00000000 __exidx_start
00008000 l       *ABS*	00000000 __rom_end
00000000 l       *ABS*	00000000 __process_stack_size
00008000 l       *ABS*	00000000 __rom_size
10001000 l       *ABS*	00000000 __heap_end
00001000 l       *ABS*	00000000 __ram_size
10000410 l       .stack	00000000 __heap_start
00000000 l       .text	00000000 __rom_start
00000400 l       *ABS*	00000000 __main_stack_size
10000000 g     O .data	00000004 x
00000048 g     F .text	0000000c now
00000138 g     F .text	0000003c uart_send
00000000 g       .text	00000000 __text_start
10000410 g       .stack	00000000 __process_stack_end
0000024c g     F .text	00000088 .hidden __udivsi3
10000410 g       .stack	00000000 __process_stack_start
000002ec g       *ABS*	00000000 __data_init_start
10000410 g       .stack	00000000 __main_stack_end
1000000c g       .data	00000000 __bss_end
10000010 g       .stack	00000000 __stack_start
00000020 g     F .text	00000028 timer_init
10000008 g     O .data	00000004 z
000000ac g     F .text	0000007c uart_init
00000174 g     F .text	00000024 uart_receive_non_blocking
00000000 g     O .text	00000020 __vectors
1000000c g       .data	00000000 __data_end
000001f8 g     F .text	00000054 __startup
000002e8  w    F .text	00000002 .hidden __aeabi_ldiv0
10000410 g       .stack	00000000 __stack_end
000002ec g       .text	00000000 __text_end
1000000c g       .data	00000000 __bss_start
00000198 g     F .text	00000060 main
00000054 g     F .text	00000010 await
0000024c g     F .text	00000000 .hidden __aeabi_uidiv
10000010 g       .stack	00000000 __main_stack_start
10000004 g     O .data	00000004 y
00000064 g     F .text	00000018 delay
0000007c g     F .text	00000030 baudrate_set
000002d4 g     F .text	00000012 .hidden __aeabi_uidivmod
00000128 g     F .text	00000010 uart_receive_blocking
000002e8  w    F .text	00000002 .hidden __aeabi_idiv0
10000000 g       .data	00000000 __data_start


