	.cpu cortex-m0
	.fpu softvfp
	.eabi_attribute 20, 1
	.eabi_attribute 21, 1
	.eabi_attribute 23, 3
	.eabi_attribute 24, 1
	.eabi_attribute 25, 1
	.eabi_attribute 26, 1
	.eabi_attribute 30, 4
	.eabi_attribute 34, 0
	.eabi_attribute 18, 4
	.code	16
	.file	"main.c"
	.global	__aeabi_uidiv
	.section	.text.baudrate_set,"ax",%progbits
	.align	1
	.global	baudrate_set
	.code	16
	.thumb_func
	.type	baudrate_set, %function
baudrate_set:
	push	{r3, lr}
	ldr	r3, .L2
	mov	r1, #1
	mov	r2, r3
	add	r2, r2, #152
	str	r1, [r2]
	ldr	r1, [r3, #120]
	@ sp needed
	lsl	r1, r1, #4
	mul	r1, r0
	ldr	r0, .L2+4
	bl	__aeabi_uidiv
	ldr	r3, .L2+8
	asr	r2, r0, #8
	uxtb	r0, r0
	str	r2, [r3, #4]
	str	r0, [r3]
	pop	{r3, pc}
.L3:
	.align	2
.L2:
	.word	1074036736
	.word	12000000
	.word	1073774592
	.size	baudrate_set, .-baudrate_set
	.section	.text.startup.main,"ax",%progbits
	.align	1
	.global	main
	.code	16
	.thumb_func
	.type	main, %function
main:
	push	{r3, r4, r5, lr}
	ldr	r3, .L16
	mov	r2, #128
	ldr	r1, [r3, #124]
	lsl	r2, r2, #9
	orr	r2, r1
	str	r2, [r3, #124]
	ldr	r2, [r3, #124]
	mov	r1, #128
	lsl	r1, r1, #5
	orr	r2, r1
	str	r2, [r3, #124]
	ldr	r2, .L16+4
	mov	r5, #7
	ldr	r0, [r2]
	bic	r0, r5
	str	r0, [r2]
	ldr	r4, [r2]
	mov	r0, #1
	orr	r4, r0
	str	r4, [r2]
	ldr	r2, .L16+8
	ldr	r4, [r2]
	bic	r4, r5
	str	r4, [r2]
	ldr	r4, [r2]
	orr	r0, r4
	str	r0, [r2]
	ldr	r2, [r3, #124]
	ldr	r4, .L16+12
	orr	r1, r2
	str	r1, [r3, #124]
	mov	r0, #150
	mov	r3, #131
	str	r3, [r4, #12]
	lsl	r0, r0, #8
	bl	baudrate_set
	mov	r3, #3
	str	r3, [r4, #12]
	str	r5, [r4, #8]
	ldr	r3, [r4, #20]
.L7:
	ldr	r2, [r4, #20]
	mov	r3, #96
	and	r3, r2
	cmp	r3, #96
	bne	.L7
.L6:
	ldr	r3, [r4, #20]
	lsl	r2, r3, #31
	bpl	.L15
	ldr	r3, .L16+12
	ldr	r3, [r3]
	b	.L6
.L15:
	mov	r3, #85
.L13:
	ldr	r2, [r4]
	uxtb	r3, r3
	orr	r3, r2
	str	r3, [r4]
	ldr	r3, .L16+16
.L10:
	sub	r3, r3, #1
	cmp	r3, #0
	bne	.L10
.L12:
	ldr	r3, [r4, #20]
	lsl	r2, r3, #31
	bpl	.L12
	ldr	r3, .L16+12
	ldr	r3, [r3]
	b	.L13
.L17:
	.align	2
.L16:
	.word	1074036740
	.word	1074020516
	.word	1074020520
	.word	1073774592
	.word	262143
	.size	main, .-main
	.global	baudrate
	.global	clock_frequency
	.global	LSR_RXFE
	.global	LSR_TEMT
	.global	LSR_THRE
	.global	LSR_BI
	.global	LSR_FE
	.global	LSR_PE
	.global	LSR_OE
	.global	LSR_RDR
	.global	MHz
	.global	kHz
	.global	Hz
	.section	.rodata.baudrate,"a",%progbits
	.align	2
	.type	baudrate, %object
	.size	baudrate, 4
baudrate:
	.word	38400
	.section	.rodata.LSR_OE,"a",%progbits
	.align	2
	.type	LSR_OE, %object
	.size	LSR_OE, 4
LSR_OE:
	.word	2
	.section	.rodata.kHz,"a",%progbits
	.align	2
	.type	kHz, %object
	.size	kHz, 4
kHz:
	.word	1000
	.section	.rodata.clock_frequency,"a",%progbits
	.align	2
	.type	clock_frequency, %object
	.size	clock_frequency, 4
clock_frequency:
	.word	12000000
	.section	.rodata.LSR_RXFE,"a",%progbits
	.align	2
	.type	LSR_RXFE, %object
	.size	LSR_RXFE, 4
LSR_RXFE:
	.word	128
	.section	.rodata.LSR_BI,"a",%progbits
	.align	2
	.type	LSR_BI, %object
	.size	LSR_BI, 4
LSR_BI:
	.word	16
	.section	.rodata.LSR_THRE,"a",%progbits
	.align	2
	.type	LSR_THRE, %object
	.size	LSR_THRE, 4
LSR_THRE:
	.word	32
	.section	.rodata.LSR_PE,"a",%progbits
	.align	2
	.type	LSR_PE, %object
	.size	LSR_PE, 4
LSR_PE:
	.word	4
	.section	.rodata.Hz,"a",%progbits
	.align	2
	.type	Hz, %object
	.size	Hz, 4
Hz:
	.word	1
	.section	.rodata.LSR_RDR,"a",%progbits
	.align	2
	.type	LSR_RDR, %object
	.size	LSR_RDR, 4
LSR_RDR:
	.word	1
	.section	.rodata.LSR_TEMT,"a",%progbits
	.align	2
	.type	LSR_TEMT, %object
	.size	LSR_TEMT, 4
LSR_TEMT:
	.word	64
	.section	.rodata.MHz,"a",%progbits
	.align	2
	.type	MHz, %object
	.size	MHz, 4
MHz:
	.word	1000000
	.section	.rodata.LSR_FE,"a",%progbits
	.align	2
	.type	LSR_FE, %object
	.size	LSR_FE, 4
LSR_FE:
	.word	8
	.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.3 20140228 (release) [ARM/embedded-4_8-branch revision 208322]"
