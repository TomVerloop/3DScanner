	.cpu cortex-m0
	.fpu softvfp
	.eabi_attribute 20, 1
	.eabi_attribute 21, 1
	.eabi_attribute 23, 3
	.eabi_attribute 24, 1
	.eabi_attribute 25, 1
	.eabi_attribute 26, 1
	.eabi_attribute 30, 4
	.eabi_attribute 34, 0
	.eabi_attribute 18, 4
	.code	16
	.file	"MCP23017.c"
	.section	.text.MCP23017_writereg,"ax",%progbits
	.align	1
	.global	MCP23017_writereg
	.code	16
	.thumb_func
	.type	MCP23017_writereg, %function
MCP23017_writereg:
	push	{r3, r4, r5, lr}
	mov	r5, r0
	mov	r4, r1
	bl	i2c_start
	mov	r0, #78
	bl	i2c_put_byte
	bl	i2c_ack_get
	cmp	r0, #0
	bne	.L2
.L4:
	mov	r0, #0
	b	.L3
.L2:
	mov	r0, r5
	bl	i2c_put_byte
	bl	i2c_ack_get
	cmp	r0, #0
	beq	.L4
	mov	r0, r4
	bl	i2c_put_byte
	bl	i2c_ack_get
	cmp	r0, #0
	beq	.L3
	bl	i2c_stop
	mov	r0, #1
.L3:
	@ sp needed
	pop	{r3, r4, r5, pc}
	.size	MCP23017_writereg, .-MCP23017_writereg
	.section	.text.MCP23017_readreg,"ax",%progbits
	.align	1
	.global	MCP23017_readreg
	.code	16
	.thumb_func
	.type	MCP23017_readreg, %function
MCP23017_readreg:
	push	{r4, lr}
	mov	r4, r0
	bl	i2c_start
	mov	r0, #78
	bl	i2c_put_byte
	bl	i2c_ack_get
	cmp	r0, #0
	bne	.L14
.L16:
	mov	r0, #0
	b	.L15
.L14:
	mov	r0, r4
	bl	i2c_put_byte
	bl	i2c_ack_get
	cmp	r0, #0
	beq	.L16
	bl	i2c_stop
	bl	i2c_start
	mov	r0, #79
	bl	i2c_put_byte
	bl	i2c_ack_get
	cmp	r0, #0
	beq	.L16
	bl	i2c_get_byte
	mov	r4, r0
	bl	i2c_stop
	mov	r0, r4
.L15:
	@ sp needed
	pop	{r4, pc}
	.size	MCP23017_readreg, .-MCP23017_readreg
	.section	.text.MCP23017_SetOutput,"ax",%progbits
	.align	1
	.global	MCP23017_SetOutput
	.code	16
	.thumb_func
	.type	MCP23017_SetOutput, %function
MCP23017_SetOutput:
	push	{r3, r4, r5, lr}
	mov	r5, r1
	mov	r4, #1
	cmp	r0, #0
	bne	.L24
	mov	r0, r4
	bl	MCP23017_readreg
	mov	r3, r4
	lsl	r3, r3, r5
	mvn	r5, r3
	uxtb	r5, r5
	mov	r1, r5
	and	r1, r0
	mov	r0, r4
	bl	MCP23017_writereg
	mov	r0, #13
	bl	MCP23017_readreg
	mov	r1, r5
	and	r1, r0
	mov	r0, #13
	b	.L26
.L24:
	mov	r0, #0
	bl	MCP23017_readreg
	lsl	r4, r4, r5
	mvn	r4, r4
	uxtb	r4, r4
	mov	r1, r4
	and	r1, r0
	mov	r0, #0
	bl	MCP23017_writereg
	mov	r0, #12
	bl	MCP23017_readreg
	mov	r1, r4
	and	r1, r0
	mov	r0, #12
.L26:
	bl	MCP23017_writereg
	@ sp needed
	pop	{r3, r4, r5, pc}
	.size	MCP23017_SetOutput, .-MCP23017_SetOutput
	.section	.text.MCP23017_SetInput,"ax",%progbits
	.align	1
	.global	MCP23017_SetInput
	.code	16
	.thumb_func
	.type	MCP23017_SetInput, %function
MCP23017_SetInput:
	push	{r3, r4, r5, lr}
	mov	r5, r1
	mov	r4, #1
	cmp	r0, #0
	bne	.L28
	mov	r0, r4
	bl	MCP23017_readreg
	mov	r3, r4
	lsl	r3, r3, r5
	uxtb	r5, r3
	orr	r0, r5
	uxtb	r1, r0
	mov	r0, r4
	bl	MCP23017_writereg
	mov	r0, #13
	bl	MCP23017_readreg
	orr	r5, r0
	uxtb	r1, r5
	mov	r0, #13
	b	.L30
.L28:
	mov	r0, #0
	bl	MCP23017_readreg
	lsl	r4, r4, r5
	uxtb	r4, r4
	orr	r0, r4
	uxtb	r1, r0
	mov	r0, #0
	bl	MCP23017_writereg
	mov	r0, #12
	bl	MCP23017_readreg
	orr	r4, r0
	uxtb	r1, r4
	mov	r0, #12
.L30:
	bl	MCP23017_writereg
	@ sp needed
	pop	{r3, r4, r5, pc}
	.size	MCP23017_SetInput, .-MCP23017_SetInput
	.section	.text.MCP2017_Setpin,"ax",%progbits
	.align	1
	.global	MCP2017_Setpin
	.code	16
	.thumb_func
	.type	MCP2017_Setpin, %function
MCP2017_Setpin:
	push	{r3, r4, r5, lr}
	mov	r4, r1
	cmp	r0, #0
	bne	.L32
	mov	r5, #1
	mov	r0, #20
	cmp	r2, #0
	beq	.L33
	bl	MCP23017_readreg
	lsl	r5, r5, r4
	mov	r1, r0
	orr	r1, r5
	uxtb	r1, r1
	b	.L38
.L33:
	bl	MCP23017_readreg
	lsl	r5, r5, r4
	bic	r0, r5
	uxtb	r1, r0
.L38:
	mov	r0, #20
	b	.L36
.L32:
	cmp	r0, #1
	bne	.L31
	lsl	r0, r0, r1
	mov	r4, r0
	mov	r0, #21
	cmp	r2, #0
	beq	.L35
	bl	MCP23017_readreg
	orr	r4, r0
	uxtb	r1, r4
	b	.L37
.L35:
	bl	MCP23017_readreg
	bic	r0, r4
	uxtb	r1, r0
.L37:
	mov	r0, #21
.L36:
	bl	MCP23017_writereg
.L31:
	@ sp needed
	pop	{r3, r4, r5, pc}
	.size	MCP2017_Setpin, .-MCP2017_Setpin
	.section	.text.MCP2017_getpin,"ax",%progbits
	.align	1
	.global	MCP2017_getpin
	.code	16
	.thumb_func
	.type	MCP2017_getpin, %function
MCP2017_getpin:
	push	{r3, r4, r5, lr}
	mov	r4, r0
	mov	r5, r1
	cmp	r0, #0
	bne	.L40
	mov	r0, #18
	bl	MCP23017_readreg
	asr	r0, r0, r5
	mov	r5, r0
	mov	r0, #1
	bic	r0, r5
	b	.L41
.L40:
	mov	r0, #0
	cmp	r4, #1
	bne	.L41
	mov	r0, #19
	bl	MCP23017_readreg
	asr	r0, r0, r5
	bic	r4, r0
	uxtb	r0, r4
.L41:
	@ sp needed
	pop	{r3, r4, r5, pc}
	.size	MCP2017_getpin, .-MCP2017_getpin
	.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.3 20140228 (release) [ARM/embedded-4_8-branch revision 208322]"
